Factors::

To create a factor, use the factor ( ) function and add a vector as an arguement

Music_genre <- factor(c(“Jazz”, “Rock”, “Classic”, “Pop”, “Jazz”) )

#print the factor
Music_genre

//OUTPUT
[1] Jazz ROCK CLASSIC POP JAZZ
Levels: Classic Jazz Pop Rock

To only print the levels, use the levels ( ) function :

Levels(music_genre)
[1] “Classic” “Jazz” “Pop” “Rock”

Factor length
Use the length( ) function to find out how many items there are in the factor

Length(music_genre)

//OUTPUT
[1] 8

Access Factors
To access the items in a factor, refer to the index number using [ ] brackets

Music_genre <-factor (c(“jazz” , “etc” ) )
Music_genre [3]

[1] Classic
Levels: Classic JAZZ Pop Rock

-=====================================================================
Change item value
To change the value of a specific item, refer to the index number

//INPUT
Music_genre [ 3 ] <- “JAZZ”
Music_genre [ 3 ]

//OUTPUT::
[ 1 ] JAZZ
Levels: Classic Jazz Pop Rock

Mmm basically we can’t edit the item within the template of the array
//INPUT
Music_genre <-factor(c(‘Jazz”, “Classic”, “ROCK”, “NGE”, “LOFI”))
Music_genre [ 3 ] <- “OPERA”
Music_genre [ 3 ]

//OUPUT
Doesn’t compile because the item isn’t the same as in the factor of the music_genre template
